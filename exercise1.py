#**Упражнение 1**:<br/>Написать функцию с обработкой ошибок для преобразования строки в число
#
#**Задание:**<br/>
#Создать функцию **`convert_to_int(value)`**, которая пытается преобразовать строку в целое число.<br/>
#Обработать случаи, когда преобразование невозможно, и когда возникает любое другое исключение.
#
#**Пошаговая инструкция:**
#- Создайте функцию **`convert_to_int(value)`**.
#- Используйте блок **`try`** для попытки преобразования строки в целое число с помощью функции **`int()`**.
#- Обработайте исключение **`ValueError`**, выведя сообщение о невозможности преобразования.
#- Обработайте любое другое исключение, выведя сообщение о неожиданной ошибке.
#- Добавьте блок **`finally`**, который выведет сообщение о завершении попытки преобразования.
#
#**Проверка:**
#- Протестируйте функцию с корректной строкой, например, **`"123"`**.
#- Протестируйте функцию с некорректной строкой, например, **`"abc"`**.
#- Протестируйте функцию с другим типом данных, например, списком **`[1, 2, 3]`**.

from datetime import datetime

SPLIT_LINE = "\n" + "#" * 100 + "\n"

def convert_to_int(value):
  try:
    return int(value)
  except ValueError:
    print(f"Невозможно преобразовать значение \"{value}\" в целое число")
  except Exception as e:
    print(f"Произошла неожиданная ошибка:\n\t{e}")
  finally:
    print("Попытка преобразования завершена")

print("\nПытаемся сконвертировать \"123\" в целое число:")
print("\t==>", convert_to_int("123"))

print(SPLIT_LINE)

print("\nПытаемся сконвертировать \"abc\" в целое число:")
print("\t==>", convert_to_int("abc"))

print(SPLIT_LINE)

print("\nПытаемся сконвертировать [1, 2, 3] в целое число:")
print("\t==>", convert_to_int([1, 2, 3]))

print(SPLIT_LINE)

print(f"\n{"="*50}\nFinished at: {datetime.now():%Y-%m-%d %H:%M:%S}\n\n")